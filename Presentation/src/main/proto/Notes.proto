syntax = "proto3";

option java_multiple_files = true;
option java_package = "src";
option java_outer_classname = "NotesServiceProto";

package notes_service;

message UUID {
  string value = 1;
}

message Users {
  UUID id = 1;
  int64 user_telegram_id = 2;
}

message Notes {
  UUID id = 1;
  UUID content_details_id = 2;
  bool status_of_completion = 3;
}

message ContentDetails {
  UUID id = 1;
  string content_short_name = 2;
  string content_url = 3; // This can be null
  ContentType content_type = 4;
}

message Comment {
  UUID id = 1;
  string text_message = 2;
  int64 timecode = 3; // may be null
  int32 page = 4; // may be null
}

message NoteComments {
  UUID id = 1;
  UUID content_details_id = 2;
  UUID comment_id = 3;
}

message UserNotesLinks {
  UUID id = 1;
  UUID user_id = 2;
  UUID note_id = 3;
}

enum ContentType {
  PODCAST = 0;
  VIDEO = 1;
  BOOK = 2;
  ARTICLE = 3;
}

// User Requests and Responses
message AddUserRequest {
  int64 user_telegram_id = 1;
}

message AddUserResponse {
  Users user = 1;
}

message GetUserByTelegramIdRequest {
  int64 user_telegram_id = 1;
}

message GetUserByIdRequest {
  UUID user_id = 1;
}

message GetUserResponse {
  Users user = 1;
}

message GetUsersNotesRequest {
  UUID user_id = 1;
}

message GetUsersNotesResponse {
  repeated Notes notes = 1;
}

message RemoveUserRequest {
  UUID user_id = 1;
}

message RemoveUserResponse {
  bool success = 1;
}

// Note Requests and Responses
message AddNoteRequest {
  UUID content_details_id = 1;
}

message AddNoteResponse {
  Notes note = 1;
}

message GetNoteByIdRequest {
  UUID note_id = 1;
}

message GetNoteResponse {
  Notes note = 1;
}

message LinkNoteWithUserRequest {
  UUID note_id = 1;
  UUID user_id = 2;
}

message LinkNoteWithUserResponse {
  UserNotesLinks user_notes_links = 1;
}

message RemoveNoteRequest {
  UUID note_id = 1;
}

message RemoveNoteResponse {
  bool success = 1;
}

// Notes Specific Details Requests and Responses
message AddContentDetailsRequest {
  string content_short_name = 1;
  string content_url = 2;
  ContentType content_type = 3;
}

message AddContentDetailsResponse {
  ContentDetails content_details = 1;
}

message GetContentDetailsByIdRequest {
  UUID content_details_id = 1;
}

message GetContentDetailsByShortNameRequest {
  string content_short_name = 1;
}

message GetContentDetailsByUrlRequest {
  string content_url = 1;
}

message GetContentDetailsByIdResponse {
  ContentDetails content_details = 1;
}

message GetArrayContentDetailsResponse {
  repeated ContentDetails array_content_details = 1;
}

// Description Requests and Responses
message AddNoteCommentsRequest {
  UUID content_details_id = 1;
  UUID comment_id = 2;
}

message AddNoteCommentsResponse {
  NoteComments note_comments = 1;
}

message GetNoteCommentsByCommentIdRequest {
  UUID comment_id = 1;
}

message GetNoteCommentsByCommentIdResponse {
  repeated NoteComments note_comments = 1;
}

message GetNoteCommentsByIdRequest {
  UUID note_comments_id = 1;
}

message GetNoteCommentsByIdResponse {
  NoteComments note_comments = 1;
}

message GetCommentsByContentDetailsIdRequest {
  UUID content_details_id = 1;
}

message GetCommentsByContentDetailsIdResponse {
  repeated Comment comments = 1;
}

// Comment Requests and Responses
message AddCommentRequest {
  string text_message = 1;
  int64 timecode = 2; // may be null
  int32 page = 3; // may be null
}

message AddCommentResponse {
  Comment comment = 1;
}

message GetCommentRequest {
  UUID comment_id = 1;
}

message GetCommentResponse {
  Comment comment = 1;
}

// Service Definition
service NotesService {
  rpc AddUser(AddUserRequest) returns (AddUserResponse);
  rpc GetUserByTelegramId(GetUserByTelegramIdRequest) returns (GetUserResponse);
  rpc GetUserById(GetUserByIdRequest) returns (GetUserResponse);
  rpc GetUsersNotes(GetUsersNotesRequest) returns (GetUsersNotesResponse);
  rpc RemoveUser(RemoveUserRequest) returns (RemoveUserResponse);

  rpc AddNote (AddNoteRequest) returns (AddNoteResponse);
  rpc GetNoteById(GetNoteByIdRequest) returns (GetNoteResponse);
  rpc LinkNoteWithUser(LinkNoteWithUserRequest) returns (LinkNoteWithUserResponse);
  rpc RemoveNote(RemoveNoteRequest) returns (RemoveNoteResponse);

  rpc AddContentDetails(AddContentDetailsRequest) returns (AddContentDetailsResponse);
  rpc GetContentDetailsById(GetContentDetailsByIdRequest) returns (GetContentDetailsByIdResponse);
  rpc GetContentDetailsByShortName(GetContentDetailsByShortNameRequest) returns (GetArrayContentDetailsResponse);
  rpc GetContentDetailsByUrl(GetContentDetailsByUrlRequest) returns (GetArrayContentDetailsResponse);

  rpc AddNoteComments (AddNoteCommentsRequest) returns (AddNoteCommentsResponse);
  rpc GetNoteCommentsById (GetNoteCommentsByIdRequest) returns (GetNoteCommentsByIdResponse);
  rpc GetNoteCommentsByCommentId (GetNoteCommentsByCommentIdRequest) returns (GetNoteCommentsByCommentIdResponse);
  rpc GetCommentsByContentDetailsId (GetCommentsByContentDetailsIdRequest) returns (GetCommentsByContentDetailsIdResponse);

  rpc AddComment (AddCommentRequest) returns (AddCommentResponse);
  rpc GetComment(GetCommentRequest) returns (GetCommentResponse);
}
